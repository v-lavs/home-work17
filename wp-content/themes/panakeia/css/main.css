/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}.heading-banner h1{font:300 72px/0.67 "Roboto Slab",serif}.heading-banner p{font:700 30px/1.6 "Roboto Slab",serif}.banner-section .card{font:300 15px/2 "Roboto",sans-serif}.banner-section .card a{font:700 30px/1.6 "Roboto Slab",serif}.section-news h2{font:700 30px/1.6 "Roboto Slab",serif}.section-news .post-item h3{font:700 24px/1.6 "Roboto Slab",serif}.inform-section h2{font:700 30px/1 "Roboto Slab",serif}.product-item h3{font:700 30px/1.6 "Roboto Slab",serif}.team h2{font:700 30px/1.6 "Roboto Slab",serif}.main-title{font-size:35px;text-align:center;margin:0 0 30px;padding:0}*{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}body{color:#31353e;font:300 15px/2 "Roboto",sans-serif}.btn{display:inline-block;font:400 18px/1.67 "Roboto Slab",serif;padding:12px 59px;border-radius:100px;text-decoration:none;margin:0 auto;-webkit-appearance:none;-moz-appearance:none;appearance:none;border:none;-webkit-transition:.35s;-moz-transition:.35s;-ms-transition:.35s;transition:.35s;outline:none}.btn:hover{opacity:.7;-moz-opacity:.7}.btn:focus{opacity:.7;-moz-opacity:.7}.btn-banner-section{color:#612316;background-color:#fff}.btn-section-news{color:#4e5159;background:#fff;font-size:10px;padding:12px 51px;transition:0.35s}.btn-section-news:hover{color:#191b29;background:#bdbdbd}.btn-item-danger{color:#ffffff;background:#dd4b2b;padding:12px 75px}.btn-item-info{color:#ffffff;background:#4b4e73;padding:12px 75px}.form-group{border:1px solid #d1d2d2;border-radius:100px;max-width:510px;margin:0 auto;position:relative;background-color:rgba(255,255,255,0.2)}.form-group input{font:400 18px/1.67 "Roboto Slab",serif;color:#fff;width:calc(100% - 215px);padding:11px 0 11px 36px;display:block;border:transparent;background:transparent}.form-group .btn-inform-section{padding:12px 73px;background:#fff;color:#612316;position:absolute;right:-1px;bottom:0}::-webkit-input-placeholder{color:#f3f4f6}::-moz-placeholder{color:#f3f4f6}:-ms-input-placeholder{color:#f3f4f6}:-moz-placeholder{color:#f3f4f6}.container{width:100%;max-width:1280px;margin:0 auto;padding:0 15px}.container-default{width:100%;max-width:1200px;margin:0 auto}.clearfix:after{content:"";clear:both;display:block}.d-table{display:table;width:100%}.d-cell{display:table-cell;vertical-align:bottom}.header{width:100%;padding:48px 0 40px 16px;background:#edeff1}.header .container-default{padding:0 0 0 49px}.header .container-default .logo-header{float:left;width:152px}.header .container-default .logo-header img{display:block;width:100%;height:auto}.header .container-default .nav-main{float:right}.nav-main{font:400 18px/1.33 "Roboto Slab",serif}.nav-main ul{margin:0;padding:0;list-style-type:none}.nav-main li{list-style-type:none;display:inline-block;vertical-align:middle}.nav-main a{display:block;text-decoration:none;color:#31353e;line-height:1.33;padding:15px 21px;border:1px solid transparent;-webkit-border-radius:100px;-moz-border-radius:100px;-webkit-transition:.35s;-moz-transition:.35s;-ms-transition:.35s;transition:.35s}.nav-main a:hover{color:#edeff1;background:#dd4b2b}.nav-main a:focus{color:#edeff1;background:#dd4b2b;outline:none}.bg-footer-warm{padding:95px 0 85px}.bg-footer-warm .link-item-list{margin:0;padding:0;list-style-type:none;display:inline-block;vertical-align:top;width:33%}.bg-footer-warm .link-item-list li{text-align:center}.bg-footer-warm .link-item-list a{text-decoration:none;color:#fff;font-size:18px;-webkit-transition:.35s;-moz-transition:.35s;-ms-transition:.35s;transition:.35s}.bg-footer-warm .link-item-list a:hover{text-decoration:underline;color:#edeff1}.bg-footer-second{width:100%;overflow:hidden;-webkit-background-size:cover;background-size:cover;min-height:385px;text-align:center;padding:85px 0;font-size:18px;color:#fff}.bg-footer-second p{max-width:666px;margin:0 auto;padding:0}.bg-footer-second p span{font-weight:700}.banner-section{overflow:hidden;height:1321px;background-size:cover;max-width:100%;color:#fff;position:relative}.banner-section .container{padding:15px 0 138px;text-align:center;z-index:1;position:relative}.banner-section:after{background:-moz-linear-gradient(top, transparent 0%, rgba(0,0,0,0.8) 100%);background:-webkit-linear-gradient(top, transparent 0%, rgba(0,0,0,0.8) 100%);background:linear-gradient(to bottom, transparent 0%, rgba(0,0,0,0.8) 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#00000000', endColorstr='#a6000000', GradientType=0);content:"";height:100%;left:0;position:absolute;top:0;width:100%}.banner-section .heading-banner h1{padding:0;margin:0 0 15px}.banner-section .heading-banner h1 p{padding:0;margin:0 0 122px}.banner-section .cards-container ul{margin:0;padding:0;list-style-type:none;display:flex;justify-content:space-between;flex-wrap:wrap}.banner-section .card{width:33%;text-align:center;margin-bottom:79px;vertical-align:top;padding:0 40px}.banner-section .card .box-img{width:148px;border-radius:50%;border:7px solid #edeff1;overflow:hidden;margin:0 auto 20px}.banner-section .card .box-img img{width:100%;height:auto;vertical-align:middle}.banner-section .card h3{margin:0 0 10px;padding:0}.banner-section .card h3 a{-webkit-transition:.35s;-moz-transition:.35s;-ms-transition:.35s;transition:.35s;text-decoration:none;color:#fff;outline:none}.banner-section .card h3 a:hover{opacity:.6;-moz-opacity:.6}.banner-section .card h3 a:focus{opacity:.6;-moz-opacity:.6}.section-news{padding:67px 0 60px;background:#edeff1}.section-news .container-default{padding:0 5px}.section-news h2{margin:0 0 72px;padding:0;text-align:center}.section-news .post-list ul{margin:0;padding:0;list-style-type:none}.section-news .post-item{width:33.3%;float:left;text-align:center;padding:0 15px 40px 0}.section-news .post-item:nth-child(3n+1){clear:both}.section-news .post-item h3{margin:0 0 13px;padding:0}.section-news .post-item h3 a{text-decoration:none;color:inherit}.section-news .post-item h3 a:hover{opacity:.7;-moz-opacity:.7}.section-news .post-item p{max-width:288px;margin:0 auto 30px;padding:0}.section-news .post-item img{width:100%;vertical-align:middle;margin-bottom:30px}.bg-inform-section{background:url(../img/kitchen.jpg) no-repeat center;overflow:hidden;background-size:cover;color:#fff;padding:90px 0 110px;text-align:center}.bg-inform-section h2{margin:0 0 22px;padding:0}.bg-inform-section p{max-width:533px;margin:0 auto 43px;padding:0}.product-details{padding:66px 0 88px;color:#191b29}.product-details .list-product-item{margin:0;padding:0;list-style-type:none}.product-details .product-item{width:53%;padding:26px 45px;overflow:hidden}.product-details .product-item h3{margin:0 0 12px;padding:0}.product-details .product-item h3 .link-product-item{text-decoration:none;color:#191b29}.product-details .product-item p{margin:0 0 38px;padding:0}.product-details .list-product-item li{margin-bottom:55px}.product-details .list-product-item li:last-child{margin-bottom:0}.product-details .list-product-item li:nth-child(even) .thumb{float:left}.product-details .list-product-item li:nth-child(even) .btn-item-danger{background:#4b4e73}.product-details .thumb{width:47%;float:right;border:1px solid #edeff1;clear:both}.product-details .thumb img{display:block;width:100%;height:auto}.product-details .thumb video{display:block;width:100%;height:auto}.team{padding:67px 0 60px;background:#edeff1}.team .container-default{padding:0 5px}.team h2{margin:0 0 72px;padding:0;text-align:center}.team .team-list{margin:0;padding:0;list-style-type:none;display:flex;justify-content:space-between;flex-wrap:wrap;margin:0 -15px}.team .team-list .post-item-team{width:25%;padding:0 15px;margin-bottom:30px}.team .team-list .post-item-team .img-member-wrap img{display:block;width:100%}.team .team-list .post-item-team .content-member{text-align:center;padding:15px;background:white}.team .team-list .post-item-team .content-member .title-member{padding:0;margin:0 0 13px;font-family:"Roboto Slab",serif;font-weight:700;font-size:24px}.team .team-list .post-item-team .content-member p{padding:0;margin:0}.team .team-list .post-item-team a{text-decoration:none;color:inherit}.news-list{list-style-type:none}.single .post-thumbnail{float:left}.section-news .container .post-title{font:700 30px/1.6 "Roboto Slab", serif}.team .container .img-member-wrap img{display:block;margin:0 auto}.team .container .content-member{text-align:center}.team .container .content-member .title-member{padding:0;margin:0 0 13px;font-family:"Roboto Slab",serif;font-weight:700;font-size:24px}.site-main .post-single .card{padding:30px 0;text-align:center}.site-main .post-single .card a{text-decoration:none;color:inherit;font-family:"Roboto Slab",serif;font-weight:700;font-size:24px}.site-main .post-single .card p,.site-main .post-single .card h3{padding:0;margin:0 0 15px}.site-main .cards-container ul{margin:0;padding:0;list-style-type:none;display:flex;justify-content:space-between;flex-wrap:wrap}.site-main .cards-container .card{width:33%;text-align:center;margin-bottom:79px;vertical-align:top;padding:0 40px}.site-main .cards-container .card a{text-decoration:none;color:inherit;font-family:"Roboto Slab",serif;font-weight:700;font-size:24px}.site-main .cards-container .card .box-img{width:148px;border-radius:50%;border:7px solid #edeff1;overflow:hidden;margin:0 auto 20px}.site-main .cards-container .card .box-img img{width:100%;height:auto;vertical-align:middle}.site-main .cards-container .card .box-img p,.site-main .cards-container .card .box-img h3{padding:0;margin:0 0 15px}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
